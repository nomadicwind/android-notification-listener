#!/bin/sh

#
# Copyright Â© 2015-2021 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
#
#   Gradle start up script for POSIX generated by Gradle.
#
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
app_path=$0

while [ -h "$app_path" ] ; do
  ls=$(ls -ld "$app_path")
  link=${ls#*' -> '}
  if expr "$link" : '/.*' >/dev/null; then
    app_path=$link
  else
    app_path=$(dirname "$app_path")"/$link"
  fi
done

APP_HOME=$(cd "$(dirname "$app_path")" && pwd -P)

APP_BASE_NAME=${0##*/}

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn () {
  echo "$*"
}

die () {
  echo
  echo "$*"
  echo
  exit 1
}

# OS specific support functions.
cygwin=false
msys=false
darwin=false
nonstop=false
case "$(uname)" in
  CYGWIN* )
    cygwin=true
    ;;
  MINGW* | MSYS* )
    msys=true
    ;;
  Darwin* )
    darwin=true
    ;;
  NONSTOP* )
    nonstop=true
    ;;
esac

CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
  if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
    # IBM's JDK on AIX uses strange locations for the executables
    JAVACMD="$JAVA_HOME/jre/sh/java"
  else
    JAVACMD="$JAVA_HOME/bin/java"
  fi
  if [ ! -x "$JAVACMD" ] ; then
    die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
  fi
else
  JAVACMD="java"
  if ! command -v java >/dev/null 2>&1 ; then
    die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
  fi
fi

# Increase the maximum file descriptors if we can.
if [ "$cygwin" = false ] && [ "$darwin" = false ] && [ "$msys" = false ] ; then
  if [ "$MAX_FD" != "maximum" ] ; then
    MAX_FD_LIMIT=$(ulimit -H -n) || warn "Could not query maximum file descriptor limit"
    if [ $? -eq 0 ] ; then
      if [ "$MAX_FD_LIMIT" = "unlimited" ] ; then
        MAX_FD="$MAX_FD_LIMIT"
      fi
      ulimit -n "$MAX_FD" || warn "Could not set maximum file descriptor limit to $MAX_FD"
    fi
  else
    ulimit -n "$MAX_FD" || warn "Could not set maximum file descriptor limit to $MAX_FD"
  fi
fi

# For Darwin, ensure JAVA_HOME is set via /usr/libexec/java_home if available.
if [ "$darwin" = true ] ; then
  if [ -z "$JAVA_HOME" ] ; then
    if [ -x "/usr/libexec/java_home" ] ; then
      JAVA_HOME="$(/usr/libexec/java_home)" || die "Unable to determine Java Home via /usr/libexec/java_home"
      export JAVA_HOME
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  fi
fi

# Handle word splitting issues.
save () {
  for i do
    printf '%s\n' "$i" | sed "s/'/'\\\\''/g"
  done
}
APP_ARGS=$(save "$@")

# For Cygwin or MSYS, switch paths to Windows format before running java.
if [ "$cygwin" = true ] || [ "$msys" = true ] ; then
  APP_HOME=$(cygpath --path --mixed "$APP_HOME")
  CLASSPATH=$(cygpath --path --mixed "$CLASSPATH")
  JAVACMD=$(cygpath --unix "$JAVACMD")
fi

# Collect all arguments for the java command.
eval set -- $DEFAULT_JVM_OPTS "$JAVA_OPTS" "$GRADLE_OPTS" "-Dorg.gradle.appname=$APP_BASE_NAME" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"

exec "$JAVACMD" "$@"
